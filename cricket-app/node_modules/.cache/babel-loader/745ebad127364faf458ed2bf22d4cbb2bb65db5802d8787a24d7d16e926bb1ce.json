{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sohail\\\\Desktop\\\\HCL CREATION\\\\cricket-app\\\\src\\\\pages\\\\AddPlayerPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport PlayerForm from '../components/PlayerForm';\nimport PlayerTable from '../components/PlayerTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlayerPage() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    season: '',\n    innings: 0,\n    notOuts: 0,\n    runs: 0,\n    ballsFaced: 0,\n    wickets: 0,\n    runsGiven: 0,\n    overs: 0\n  });\n  const [failedAttempts, setFailedAttempts] = useState(0);\n  const [isLocked, setIsLocked] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isLocked) {\n      alert(\"Too many failed attempts. Please wait 2 minutes.\");\n      return;\n    }\n    const input = prompt(\"Enter admin password to add player:\");\n    if (!input) return;\n    try {\n      const parsedData = {\n        ...formData,\n        innings: parseInt(formData.innings),\n        notOuts: parseInt(formData.notOuts),\n        runs: parseInt(formData.runs),\n        ballsFaced: parseInt(formData.ballsFaced),\n        wickets: parseInt(formData.wickets),\n        runsGiven: parseInt(formData.runsGiven),\n        overs: parseFloat(formData.overs)\n      };\n      const response = await fetch('http://localhost:5000/players/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-admin-password': input\n        },\n        body: JSON.stringify(parsedData)\n      });\n      if (response.ok) {\n        const {\n          player: newPlayer\n        } = await response.json();\n        setPlayers([...players, newPlayer]);\n        setFormData({\n          name: '',\n          season: '',\n          innings: 0,\n          notOuts: 0,\n          runs: 0,\n          ballsFaced: 0,\n          wickets: 0,\n          runsGiven: 0,\n          overs: 0\n        });\n        setFailedAttempts(0);\n      } else {\n        const attempts = failedAttempts + 1;\n        setFailedAttempts(attempts);\n        alert(`Incorrect password. Attempt ${attempts}/5`);\n        if (attempts >= 5) {\n          setIsLocked(true);\n          alert(\"Too many attempts. Locked for 2 minutes.\");\n          setTimeout(() => {\n            setIsLocked(false);\n            setFailedAttempts(0);\n          }, 120000);\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/players');\n        if (response.ok) {\n          const data = await response.json();\n          setPlayers(data);\n        } else {\n          console.error('Failed to fetch players');\n        }\n      } catch (error) {\n        console.error('Error fetching players:', error);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '4rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(PlayerForm, {\n      formData: formData,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayerTable, {\n      players: players,\n      setPlayers: setPlayers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n_s(AddPlayerPage, \"v3fhspWGEyqtyzKCL5K8DoiOWLI=\");\n_c = AddPlayerPage;\nexport default AddPlayerPage;\nvar _c;\n$RefreshReg$(_c, \"AddPlayerPage\");","map":{"version":3,"names":["useState","useEffect","PlayerForm","PlayerTable","jsxDEV","_jsxDEV","AddPlayerPage","_s","players","setPlayers","formData","setFormData","name","season","innings","notOuts","runs","ballsFaced","wickets","runsGiven","overs","failedAttempts","setFailedAttempts","isLocked","setIsLocked","handleChange","e","value","target","prev","handleSubmit","preventDefault","alert","input","prompt","parsedData","parseInt","parseFloat","response","fetch","method","headers","body","JSON","stringify","ok","player","newPlayer","json","attempts","setTimeout","error","console","fetchPlayers","data","style","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sohail/Desktop/HCL CREATION/cricket-app/src/pages/AddPlayerPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PlayerForm from '../components/PlayerForm';\nimport PlayerTable from '../components/PlayerTable';\n\nfunction AddPlayerPage() {\n    const [players, setPlayers] = useState([]);\n    const [formData, setFormData] = useState({\n        name: '',\n        season: '',\n        innings: 0,\n        notOuts: 0,\n        runs: 0,\n        ballsFaced: 0,\n        wickets: 0,\n        runsGiven: 0,\n        overs: 0\n    });\n\n    const [failedAttempts, setFailedAttempts] = useState(0);\n    const [isLocked, setIsLocked] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (isLocked) {\n            alert(\"Too many failed attempts. Please wait 2 minutes.\");\n            return;\n        }\n\n        const input = prompt(\"Enter admin password to add player:\");\n\n        if (!input) return;\n\n        try {\n            const parsedData = {\n                ...formData,\n                innings: parseInt(formData.innings),\n                notOuts: parseInt(formData.notOuts),\n                runs: parseInt(formData.runs),\n                ballsFaced: parseInt(formData.ballsFaced),\n                wickets: parseInt(formData.wickets),\n                runsGiven: parseInt(formData.runsGiven),\n                overs: parseFloat(formData.overs)\n            };\n\n            const response = await fetch('http://localhost:5000/players/add', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-admin-password': input\n                },\n                body: JSON.stringify(parsedData)\n            });\n\n            if (response.ok) {\n                const { player: newPlayer } = await response.json();\n                setPlayers([...players, newPlayer]);\n\n                setFormData({\n                    name: '',\n                    season: '',\n                    innings: 0,\n                    notOuts: 0,\n                    runs: 0,\n                    ballsFaced: 0,\n                    wickets: 0,\n                    runsGiven: 0,\n                    overs: 0\n                });\n                setFailedAttempts(0);\n            } else {\n                const attempts = failedAttempts + 1;\n                setFailedAttempts(attempts);\n                alert(`Incorrect password. Attempt ${attempts}/5`);\n\n                if (attempts >= 5) {\n                    setIsLocked(true);\n                    alert(\"Too many attempts. Locked for 2 minutes.\");\n                    setTimeout(() => {\n                        setIsLocked(false);\n                        setFailedAttempts(0);\n                    }, 120000);\n                }\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    useEffect(() => {\n        const fetchPlayers = async () => {\n            try {\n                const response = await fetch('http://localhost:5000/players');\n                if (response.ok) {\n                    const data = await response.json();\n                    setPlayers(data);\n                } else {\n                    console.error('Failed to fetch players');\n                }\n            } catch (error) {\n                console.error('Error fetching players:', error);\n            }\n        };\n\n        fetchPlayers();\n    }, []);\n\n    return (\n        <div style={{ marginTop: '4rem' }}>\n            <PlayerForm\n                formData={formData}\n                handleChange={handleChange}\n                handleSubmit={handleSubmit}\n            />\n            <PlayerTable players={players} setPlayers={setPlayers} />\n        </div>\n    );\n}\n\nexport default AddPlayerPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}