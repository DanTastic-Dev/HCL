{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sohail\\\\Desktop\\\\HCL CREATION\\\\cricket-app\\\\src\\\\pages\\\\AllRounderPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllRounderPage = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/players');\n        const data = await res.json();\n        setPlayers(data);\n      } catch (err) {\n        console.error('Error fetching players:', err);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  const eligibleAllrounders = players.filter(p => p.runs >= 0 && p.wickets >= 6);\n  const sorted = [...eligibleAllrounders].sort((a, b) => {\n    const getScore = p => {\n      const batAvg = p.innings - p.notOuts > 0 ? p.runs / (p.innings - p.notOuts) : 0;\n      const strikeRate = p.ballsFaced > 0 ? p.runs / p.ballsFaced * 100 : 0;\n      const batScore = batAvg * 0.7 + strikeRate * 0.6 + p.runs * 0.08;\n      const economy = p.overs > 0 ? p.runsGiven / p.overs : 0;\n      const bowlScore = p.wickets * 5.5 - economy * 1.2;\n      return batScore + bowlScore;\n    };\n    return getScore(b) - getScore(a);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top All-Rounders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Runs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wickets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Bat Avg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Strike Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Economy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"All-Rounder Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sorted.map(p => {\n          const batAvg = p.innings - p.notOuts > 0 ? p.runs / (p.innings - p.notOuts) : 0;\n          const strikeRate = p.ballsFaced > 0 ? p.runs / p.ballsFaced * 100 : 0;\n          const economy = p.overs > 0 ? p.runsGiven / p.overs : 0;\n          const score = batAvg * 0.7 + strikeRate * 0.6 + p.runs * 0.08 + (p.wickets * 5.5 - economy * 1.2);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.runs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: p.wickets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: batAvg.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: strikeRate.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: economy.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: score.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, p._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(AllRounderPage, \"X/Tdqu5+Xz4mrEJLe3+u4Igo5rg=\");\n_c = AllRounderPage;\nexport default AllRounderPage;\nvar _c;\n$RefreshReg$(_c, \"AllRounderPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AllRounderPage","_s","players","setPlayers","fetchPlayers","res","fetch","data","json","err","console","error","eligibleAllrounders","filter","p","runs","wickets","sorted","sort","a","b","getScore","batAvg","innings","notOuts","strikeRate","ballsFaced","batScore","economy","overs","runsGiven","bowlScore","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","map","score","name","toFixed","_id","_c","$RefreshReg$"],"sources":["C:/Users/Sohail/Desktop/HCL CREATION/cricket-app/src/pages/AllRounderPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AllRounderPage = () => {\n    const [players, setPlayers] = useState([]);\n\n    useEffect(() => {\n        const fetchPlayers = async () => {\n            try {\n                const res = await fetch('http://localhost:5000/players');\n                const data = await res.json();\n                setPlayers(data);\n            } catch (err) {\n                console.error('Error fetching players:', err);\n            }\n        };\n        fetchPlayers();\n    }, []);\n\n    const eligibleAllrounders = players.filter(p => p.runs >= 0 && p.wickets >= 6);\n\n    const sorted = [...eligibleAllrounders].sort((a, b) => {\n        const getScore = (p) => {\n            const batAvg = p.innings - p.notOuts > 0 ? p.runs / (p.innings - p.notOuts) : 0;\n            const strikeRate = p.ballsFaced > 0 ? (p.runs / p.ballsFaced) * 100 : 0;\n            const batScore = batAvg * 0.7 + strikeRate * 0.6 + p.runs * 0.08;\n\n            const economy = p.overs > 0 ? p.runsGiven / p.overs : 0;\n            const bowlScore = p.wickets * 5.5 - economy * 1.2;\n\n            return batScore + bowlScore;\n        };\n\n        return getScore(b) - getScore(a);\n    });\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h2>Top All-Rounders</h2>\n            <table border=\"1\" cellPadding=\"5\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Runs</th>\n                        <th>Wickets</th>\n                        <th>Bat Avg</th>\n                        <th>Strike Rate</th>\n                        <th>Economy</th>\n                        <th>All-Rounder Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {sorted.map(p => {\n                        const batAvg = p.innings - p.notOuts > 0 ? p.runs / (p.innings - p.notOuts) : 0;\n                        const strikeRate = p.ballsFaced > 0 ? (p.runs / p.ballsFaced) * 100 : 0;\n                        const economy = p.overs > 0 ? p.runsGiven / p.overs : 0;\n                        const score = batAvg * 0.7 + strikeRate * 0.6 + p.runs * 0.08 + (p.wickets * 5.5 - economy * 1.2);\n\n                        return (\n                            <tr key={p._id}>\n                                <td>{p.name}</td>\n                                <td>{p.runs}</td>\n                                <td>{p.wickets}</td>\n                                <td>{batAvg.toFixed(2)}</td>\n                                <td>{strikeRate.toFixed(2)}</td>\n                                <td>{economy.toFixed(2)}</td>\n                                <td>{score.toFixed(2)}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default AllRounderPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QACxD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BL,UAAU,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MACjD;IACJ,CAAC;IACDL,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,mBAAmB,GAAGV,OAAO,CAACW,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAI,CAAC,IAAID,CAAC,CAACE,OAAO,IAAI,CAAC,CAAC;EAE9E,MAAMC,MAAM,GAAG,CAAC,GAAGL,mBAAmB,CAAC,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACnD,MAAMC,QAAQ,GAAIP,CAAC,IAAK;MACpB,MAAMQ,MAAM,GAAGR,CAAC,CAACS,OAAO,GAAGT,CAAC,CAACU,OAAO,GAAG,CAAC,GAAGV,CAAC,CAACC,IAAI,IAAID,CAAC,CAACS,OAAO,GAAGT,CAAC,CAACU,OAAO,CAAC,GAAG,CAAC;MAC/E,MAAMC,UAAU,GAAGX,CAAC,CAACY,UAAU,GAAG,CAAC,GAAIZ,CAAC,CAACC,IAAI,GAAGD,CAAC,CAACY,UAAU,GAAI,GAAG,GAAG,CAAC;MACvE,MAAMC,QAAQ,GAAGL,MAAM,GAAG,GAAG,GAAGG,UAAU,GAAG,GAAG,GAAGX,CAAC,CAACC,IAAI,GAAG,IAAI;MAEhE,MAAMa,OAAO,GAAGd,CAAC,CAACe,KAAK,GAAG,CAAC,GAAGf,CAAC,CAACgB,SAAS,GAAGhB,CAAC,CAACe,KAAK,GAAG,CAAC;MACvD,MAAME,SAAS,GAAGjB,CAAC,CAACE,OAAO,GAAG,GAAG,GAAGY,OAAO,GAAG,GAAG;MAEjD,OAAOD,QAAQ,GAAGI,SAAS;IAC/B,CAAC;IAED,OAAOV,QAAQ,CAACD,CAAC,CAAC,GAAGC,QAAQ,CAACF,CAAC,CAAC;EACpC,CAAC,CAAC;EAEF,oBACIpB,OAAA;IAAKiC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5BnC,OAAA;MAAAmC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBvC,OAAA;MAAOwC,MAAM,EAAC,GAAG;MAACC,WAAW,EAAC,GAAG;MAAAN,QAAA,gBAC7BnC,OAAA;QAAAmC,QAAA,eACInC,OAAA;UAAAmC,QAAA,gBACInC,OAAA;YAAAmC,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbvC,OAAA;YAAAmC,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbvC,OAAA;YAAAmC,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBvC,OAAA;YAAAmC,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBvC,OAAA;YAAAmC,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBvC,OAAA;YAAAmC,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBvC,OAAA;YAAAmC,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRvC,OAAA;QAAAmC,QAAA,EACKjB,MAAM,CAACwB,GAAG,CAAC3B,CAAC,IAAI;UACb,MAAMQ,MAAM,GAAGR,CAAC,CAACS,OAAO,GAAGT,CAAC,CAACU,OAAO,GAAG,CAAC,GAAGV,CAAC,CAACC,IAAI,IAAID,CAAC,CAACS,OAAO,GAAGT,CAAC,CAACU,OAAO,CAAC,GAAG,CAAC;UAC/E,MAAMC,UAAU,GAAGX,CAAC,CAACY,UAAU,GAAG,CAAC,GAAIZ,CAAC,CAACC,IAAI,GAAGD,CAAC,CAACY,UAAU,GAAI,GAAG,GAAG,CAAC;UACvE,MAAME,OAAO,GAAGd,CAAC,CAACe,KAAK,GAAG,CAAC,GAAGf,CAAC,CAACgB,SAAS,GAAGhB,CAAC,CAACe,KAAK,GAAG,CAAC;UACvD,MAAMa,KAAK,GAAGpB,MAAM,GAAG,GAAG,GAAGG,UAAU,GAAG,GAAG,GAAGX,CAAC,CAACC,IAAI,GAAG,IAAI,IAAID,CAAC,CAACE,OAAO,GAAG,GAAG,GAAGY,OAAO,GAAG,GAAG,CAAC;UAEjG,oBACI7B,OAAA;YAAAmC,QAAA,gBACInC,OAAA;cAAAmC,QAAA,EAAKpB,CAAC,CAAC6B;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjBvC,OAAA;cAAAmC,QAAA,EAAKpB,CAAC,CAACC;YAAI;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjBvC,OAAA;cAAAmC,QAAA,EAAKpB,CAAC,CAACE;YAAO;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBvC,OAAA;cAAAmC,QAAA,EAAKZ,MAAM,CAACsB,OAAO,CAAC,CAAC;YAAC;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5BvC,OAAA;cAAAmC,QAAA,EAAKT,UAAU,CAACmB,OAAO,CAAC,CAAC;YAAC;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChCvC,OAAA;cAAAmC,QAAA,EAAKN,OAAO,CAACgB,OAAO,CAAC,CAAC;YAAC;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BvC,OAAA;cAAAmC,QAAA,EAAKQ,KAAK,CAACE,OAAO,CAAC,CAAC;YAAC;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAPtBxB,CAAC,CAAC+B,GAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQV,CAAC;QAEb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACrC,EAAA,CAvEID,cAAc;AAAA8C,EAAA,GAAd9C,cAAc;AAyEpB,eAAeA,cAAc;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}