{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sohail\\\\Desktop\\\\HCL CREATION\\\\cricket-app\\\\src\\\\components\\\\PlayerTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerTable = ({\n  players,\n  setPlayers\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [failedAttempts, setFailedAttempts] = useState(0);\n  const [isLocked, setIsLocked] = useState(false);\n  const handleDelete = async id => {\n    if (isLocked) {\n      alert(\"Too many failed attempts. Please wait 1 minute.\");\n      return;\n    }\n    const input = prompt(\"Enter admin password to delete:\");\n    if (!input) return;\n    try {\n      const response = await fetch(`http://localhost:5000/players/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'x-admin-password': input\n        }\n      });\n      if (response.ok) {\n        setPlayers(prev => prev.filter(p => p._id !== id));\n        setFailedAttempts(0);\n      } else {\n        const attempts = failedAttempts + 1;\n        setFailedAttempts(attempts);\n        alert(`Incorrect password. Attempt ${attempts}/5`);\n        if (attempts >= 5) {\n          setIsLocked(true);\n          setTimeout(() => {\n            setIsLocked(false);\n            setFailedAttempts(0);\n          }, 60000); // 1 minute\n        }\n      }\n    } catch (err) {\n      console.error(\"Error deleting player:\", err);\n    }\n  };\n  const handleEdit = id => {\n    if (isLocked) {\n      alert(\"Too many failed attempts. Please wait 1 minute.\");\n      return;\n    }\n    const input = prompt(\"Enter admin password to edit:\");\n    if (!input) return;\n\n    // You may skip validation or send to a secure password-check endpoint in future\n    fetch(`http://localhost:5000/players/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"x-admin-password\": input\n      }\n    }).then(res => {\n      if (res.ok) {\n        setFailedAttempts(0);\n        navigate(`/edit/${id}`, {\n          state: {\n            password: input\n          }\n        });\n      } else {\n        throw new Error(\"Unauthorized\");\n      }\n    }).catch(() => {\n      const attempts = failedAttempts + 1;\n      setFailedAttempts(attempts);\n      alert(`Incorrect password. Attempt ${attempts}/5`);\n      if (attempts >= 5) {\n        setIsLocked(true);\n        setTimeout(() => {\n          setIsLocked(false);\n          setFailedAttempts(0);\n        }, 60000); // 1 minute\n      }\n    });\n  };\n\n  // ... your existing JSX table layout stays unchanged ...\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerTable, \"bsH06a0b+jyVMWpK0puTVg9+OiI=\", false, function () {\n  return [useNavigate];\n});\n_c = PlayerTable;\nexport default PlayerTable;\nvar _c;\n$RefreshReg$(_c, \"PlayerTable\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","PlayerTable","players","setPlayers","_s","navigate","failedAttempts","setFailedAttempts","isLocked","setIsLocked","handleDelete","id","alert","input","prompt","response","fetch","method","headers","ok","prev","filter","p","_id","attempts","setTimeout","err","console","error","handleEdit","then","res","state","password","Error","catch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sohail/Desktop/HCL CREATION/cricket-app/src/components/PlayerTable.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst PlayerTable = ({ players, setPlayers }) => {\n    const navigate = useNavigate();\n    const [failedAttempts, setFailedAttempts] = useState(0);\n    const [isLocked, setIsLocked] = useState(false);\n\n    const handleDelete = async (id) => {\n        if (isLocked) {\n            alert(\"Too many failed attempts. Please wait 1 minute.\");\n            return;\n        }\n\n        const input = prompt(\"Enter admin password to delete:\");\n\n        if (!input) return;\n\n        try {\n            const response = await fetch(`http://localhost:5000/players/${id}`, {\n                method: 'DELETE',\n                headers: {\n                    'x-admin-password': input\n                }\n            });\n\n            if (response.ok) {\n                setPlayers(prev => prev.filter(p => p._id !== id));\n                setFailedAttempts(0);\n            } else {\n                const attempts = failedAttempts + 1;\n                setFailedAttempts(attempts);\n                alert(`Incorrect password. Attempt ${attempts}/5`);\n\n                if (attempts >= 5) {\n                    setIsLocked(true);\n                    setTimeout(() => {\n                        setIsLocked(false);\n                        setFailedAttempts(0);\n                    }, 60000); // 1 minute\n                }\n            }\n        } catch (err) {\n            console.error(\"Error deleting player:\", err);\n        }\n    };\n\n    const handleEdit = (id) => {\n        if (isLocked) {\n            alert(\"Too many failed attempts. Please wait 1 minute.\");\n            return;\n        }\n\n        const input = prompt(\"Enter admin password to edit:\");\n\n        if (!input) return;\n\n        // You may skip validation or send to a secure password-check endpoint in future\n        fetch(`http://localhost:5000/players/${id}`, {\n            method: \"GET\",\n            headers: {\n                \"x-admin-password\": input\n            }\n        })\n            .then(res => {\n                if (res.ok) {\n                    setFailedAttempts(0);\n                    navigate(`/edit/${id}`, { state: { password: input } });\n                } else {\n                    throw new Error(\"Unauthorized\");\n                }\n            })\n            .catch(() => {\n                const attempts = failedAttempts + 1;\n                setFailedAttempts(attempts);\n                alert(`Incorrect password. Attempt ${attempts}/5`);\n                if (attempts >= 5) {\n                    setIsLocked(true);\n                    setTimeout(() => {\n                        setIsLocked(false);\n                        setFailedAttempts(0);\n                    }, 60000); // 1 minute\n                }\n            });\n    };\n\n    // ... your existing JSX table layout stays unchanged ...\n    return (\n        <div>{/* keep your styled JSX table here, no changes needed */}</div>\n    );\n};\n\nexport default PlayerTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}